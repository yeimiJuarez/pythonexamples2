#!/usr/bin/env python
# -*- coding: utf-8 -*-

from multiprocessing import Process 
import os, multiprocessing, warnings, logging, requests
from datetime import datetime
import xml.etree.ElementTree as ET
import urllib3
from requests.auth import HTTPBasicAuth

urllib3.disable_warnings(urllib3.exceptions.InsecureRequestWarning)

usernameSoap = "user"
passwordSoap = "password"

url = "https://x.x.x.x:443/ua/soap"
headersDelete = {'Content-Type': 'text/xml;charset=UTF-8', 
           'SOAPAction': 'http://broadhop.com/ua/DeleteSubscriber' 
           }
logFile="file.log"
fileName = ""
commands = []
tree = ""
root = ""


def f(mdn):
    #print (mdn)
    ##creamos archivo de delete
    
    xmlBase = open("delete.xml.bck", "r")    #xml inputfile, 
    data = xmlBase.read()
    data = data.replace('MSISDN', mdn)
    xmlBase.close()

    for item in data.split("\n"):
        if "Request" in item:            
            commands.append(item.strip())
    print (commands[0].replace('<','').replace('>','').replace('typ:','').replace('ns1:',''))    
    responseDelete = requests.request('Post', url, auth=HTTPBasicAuth(usernameSoap, passwordSoap), data=data, headers=headersDelete, verify=False  )
    #print (responseDelete.content)
    root =ET.fromstring(responseDelete.content)
    errorOutput=""
    mensaje=""
    for child in root.getiterator('*'):
        cadena = child.tag.strip()
        if "errorCode" in cadena:
           errorOutput = child.text 
        elif "errorMessage" in cadena:
           mensaje = child.text
    logging.basicConfig(filename=logFile, filemode='a', level=logging.INFO, format='%(asctime)s - %(levelname)s - %(message)s')
    if (int(errorOutput) > 0):
       logging.warning('Ejecución de  %s comando ' + commands[0].replace('<','').replace('>','').replace('typ:','').replace('ns1:','') + ' ended with error code ' + errorOutput + " message " + mensaje, mdn)
    else:
       logging.info('Ejecución de %s comando  ' + commands[0].replace('<','').replace('>','').replace('typ:','').replace('ns1:','') + ' ended with error code ' + errorOutput + " message " + mensaje, mdn)




if __name__ == '__main__':
   inicio = datetime.now()
   pool = multiprocessing.Pool(25)
   pool.map_async(f,(x.rstrip() for x in open('seagull_1','r')))    # input file contains the list of subscribers
   pool.close()
   pool.join()
   final = datetime.now()   
   print ("elapsed time = " + str(final -inicio))